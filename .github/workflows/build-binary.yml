# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Release Binary

on:
  push:
    branches: [ master ]
    tags: ["v*"]
  pull_request:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Node 14
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - run: yarn
    - run: yarn binary
    - id: version
      name: Set VERSION
      run: echo "::set-output name=VERSION::$(<VERSION)"
    - name: Upload
      uses: 'actions/upload-artifact@v2'
      with:
          path: dist/*
          name: cid-updateprice-${{ steps.version.outputs.VERSION }}

  release:
    needs: [build]
    # if: github.event_name == 'push' && contains(github.ref, '/tags/v')
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
    - run: ls -lR
    - run: echo "::set-output name=TAG::${TAG##*/}"
      name: Set Tag
      id: tag
      env:
        TAG: ${{ github.ref }}
    - run: |
        echo "TAG: ${{ steps.tag.outputs.TAG }}"
    - name: Create Release
      if: "false"
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: "false"
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/zip
